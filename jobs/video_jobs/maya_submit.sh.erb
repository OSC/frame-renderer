#!/bin/sh

#set the resources requests. Job name, time, nodes and cores per task, task count 

#PBS -l nodes=1:ppn=<%= cores %>
#PBS -j oe

# TMPDIR currently set to something like /tmp/pbstmp.7431620[1] (unescaped)
# and Maya cannot read filepaths like that correctly.
JOB_TMPDIR=$TMPDIR
DIR_BINDS="$JOB_TMPDIR:/tmp"
# set a new tmpdir bc that's what the container needs to look at
export TMPDIR="/tmp"

function create_thumails(){
  RESIZE="-resize 80x80"
  #IMG_EXTRA_ARGS="-auto-gamma"
  IMG_ARGS="$RESIZE $IMG_EXTRA_ARGS"

  IMG_DIR="<%= project_dir %>/images"
  THUMB_DIR="<%= project_dir %>/thumbnails"

  mkdir $THUMB_DIR 2>/dev/null

  for IMG in $(ls <%= project_dir %>/images/*.exr 2>/dev/null)
  do
    BASE_IMG_NAME=${IMG##*/}
    IMG_NAME=${BASE_IMG_NAME%.exr}

    convert $IMG ${IMG_ARGS} $THUMB_DIR/${IMG_NAME}.png
  done
}

echo "starting at $(date)"

#load the singularity and ACCAD modules and record the loaded module list
module use /usr/local/share/lmodfiles/project/osc
module load singularity/current
module use /usr/local/share/lmodfiles/project/ACCAD
module load maya/2018-ACCAD

# set all the different variables you'll need 
CMD="singularity exec -B $DIR_BINDS $MAYA_IMG Render"
RENDERER="<%= renderer %>"
NODES=<%= nodes %>
START_FRAME="<%= start_frame %>"
END_FRAME="<%= end_frame %>"
EXTRA_ARGS="<%= extra %>"
FILE="<%= file %>"
PRJ_DIR="<%= project_dir %>"
SKIP_EXISTING="-skipExistingFrames <%= skip_existing %>"
TOTAL_FRAMES=$(( END_FRAME - START_FRAME + 1 ))
TASK_SIZE=$(( TOTAL_FRAMES / NODES ))
REMAINDER=$(( TOTAL_FRAMES % NODES ))

OFFSET=$(( PBS_ARRAYID * TASK_SIZE ))

TASK_START_FRAME=$(( OFFSET - TASK_SIZE + START_FRAME ))
TASK_END_FRAME=$(( OFFSET ))

if [ $REMAINDER -ne 0 ] && [ "$PBS_ARRAYID" -eq "$NODES" ]; then
  # last task picks up the remainder of the frames
  TASK_END_FRAME=$(( OFFSET + REMAINDER ))
fi

ARGS="-r $RENDERER $SKIP_EXISTING ${EXTRA_ARGS} -proj $PRJ_DIR -s $TASK_START_FRAME -e $TASK_END_FRAME $FILE"

echo "executing: $CMD $ARGS"
echo "on host: $(hostname)"
echo "with modules:"
module list

# now let's actually execute and grab the end status
${CMD} ${ARGS}
STATUS=$?

echo "ended at $(date)"
echo "ended with status $STATUS"

if [ $STATUS -eq 0 ]; then
  echo "now creating thumbnails"
  time create_thumails
fi


exit $STATUS
